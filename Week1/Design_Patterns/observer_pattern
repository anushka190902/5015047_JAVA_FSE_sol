Exercise 7: Implementing the Observer Pattern

Scenario:

You are developing a stock market monitoring application where multiple clients need to be notified whenever stock prices change. Use the Observer Pattern to achieve this.

STEPS:
Create a New Java Project: Named ObserverPatternExample.
Define Subject Interface: An interface Stock with methods to register, deregister, and notify observers.
Implement Concrete Subject: A class StockMarket that implements Stock and maintains a list of observers.
Define Observer Interface: An interface Observer with a method update().
Implement Concrete Observers: Classes MobileApp and WebApp that implement Observer.
Test the Observer Implementation: A test class to demonstrate the registration and notification of observers.
By running the ObserverPatternTest class, you should see that observers are notified of stock price changes, demonstrating the Observer design pattern.






